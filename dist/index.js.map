{
  "version": 3,
  "sources": ["../lib/main.js", "../lib/index.js"],
  "sourcesContent": ["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2024 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar max = require( '@stdlib/math-base-special-max' );\nvar isnan = require( '@stdlib/math-base-assert-is-nan' );\n\n\n// MAIN //\n\n/**\n* Returns the maximum value, ignoring NaN.\n*\n* @param {number} x - first number\n* @param {number} y - second number\n* @returns {number} maximum value\n*\n* @example\n* var v = nanmax( 3.14, 4.2 );\n* // returns 4.2\n*\n* @example\n* var v = nanmax( 4.14, NaN );\n* // returns 4.14\n*\n* @example\n* var v = nanmax( NaN, NaN );\n* // returns NaN\n*/\nfunction nanmax( x, y ) {\n\tif ( isnan( x ) ) {\n\t\treturn ( isnan( y ) ) ? NaN : y;\n\t}\n\treturn ( isnan( y ) ) ? x : max( x, y );\n}\n\n\n// EXPORTS //\n\nmodule.exports = nanmax;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2024 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return the maximum value, ignoring NaN.\n*\n* @module @stdlib/math-base-special-nanmax\n*\n* @example\n* var nanmax = require( '@stdlib/math-base-special-nanmax' );\n*\n* var v = nanmax( 3.14, 4.2 );\n* // returns 4.2\n*\n* v = nanmax( 4.14, NaN );\n* // returns 4.14\n*\n* v = nanmax( NaN, NaN );\n* // returns NaN\n*/\n\n// MODULES //\n\nvar nanmax = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = nanmax;\n"],
  "mappings": "uGAAA,IAAAA,EAAAC,EAAA,SAAAC,EAAAC,EAAA,cAsBA,IAAIC,EAAM,QAAS,+BAAgC,EAC/CC,EAAQ,QAAS,iCAAkC,EAwBvD,SAASC,EAAQC,EAAGC,EAAI,CACvB,OAAKH,EAAOE,CAAE,EACJF,EAAOG,CAAE,EAAM,IAAMA,EAEtBH,EAAOG,CAAE,EAAMD,EAAIH,EAAKG,EAAGC,CAAE,CACvC,CAKAL,EAAO,QAAUG,ICjBjB,IAAIG,EAAS,IAKb,OAAO,QAAUA",
  "names": ["require_main", "__commonJSMin", "exports", "module", "max", "isnan", "nanmax", "x", "y", "nanmax"]
}
